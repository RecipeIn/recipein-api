// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Prisma schema file

// Define the data model for the "categories" table
model Category {
  id     Int      @id @default(autoincrement())
  name   String
  Recipe Recipe[]
}

// Define the data model for the "ingredients" table
model Ingredient {
  id               Int                @id @default(autoincrement())
  name             String
  image            String
  RecipeIngredient RecipeIngredient[]
}

// Define the data model for the "instructions" table
model Instruction {
  id                Int                 @id @default(autoincrement())
  description       String
  RecipeInstruction RecipeInstruction[]
}

// Define the data model for the "nutritions" table
model Nutrition {
  id          Int    @id @default(autoincrement())
  description String
}

// Define the data model for the "recipes" table
model Recipe {
  id                Int                 @id @default(autoincrement())
  user_id           Int
  category_id       Int
  name              String
  description       String
  rating            Float
  status            String
  image             String
  user              User                @relation(fields: [user_id], references: [id])
  category          Category            @relation(fields: [category_id], references: [id])
  RecipeIngredient  RecipeIngredient[]
  RecipeInstruction RecipeInstruction[]
  RecipeReview      RecipeReview[]
  UserFavorite      UserFavorite[]
}

// Define the data model for the "recipe_ingredients" table
model RecipeIngredient {
  id            Int        @id @default(autoincrement())
  recipe_id     Int
  ingredient_id Int
  unit_id       Int
  qty           Int
  recipe        Recipe     @relation(fields: [recipe_id], references: [id])
  ingredient    Ingredient @relation(fields: [ingredient_id], references: [id])
}

// Define the data model for the "recipe_instructions" table
model RecipeInstruction {
  id             Int         @id @default(autoincrement())
  recipe_id      Int
  instruction_id Int
  recipe         Recipe      @relation(fields: [recipe_id], references: [id])
  instruction    Instruction @relation(fields: [instruction_id], references: [id])
}

// Define the data model for the "recipe_reviews" table
model RecipeReview {
  id          Int      @id @default(autoincrement())
  user_id     Int
  recipe_id   Int
  rating      Float
  description String
  date        DateTime
  user        User     @relation(fields: [user_id], references: [id])
  recipe      Recipe   @relation(fields: [recipe_id], references: [id])
}

// Define the data model for the "refresh_tokens" table
model RefreshToken {
  user_id    Int      @id
  token      String
  created_at DateTime @default(now())
  user       User     @relation(fields: [user_id], references: [id])
}

// Define the data model for the "units" table
model Unit {
  id   Int    @id @default(autoincrement())
  name String
}

// Define the data model for the "users" table
model User {
  id             Int             @id @default(autoincrement())
  username           String
  password       String
  email          String
  first_name     String?
  last_name      String?
  gender         String?
  age            Int?
  height         Int?
  weight         Int?
  activity       String?
  avatar         String?
  recipes        Recipe[]
  favorites      UserFavorite[]
  nutritions     UserNutrition[]
  refresh_tokens RefreshToken[]
  RecipeReview   RecipeReview[]
}

// Define the data model for the "user_favorites" table
model UserFavorite {
  id        Int    @id @default(autoincrement())
  user_id   Int
  recipe_id Int
  user      User   @relation(fields: [user_id], references: [id])
  recipe    Recipe @relation(fields: [recipe_id], references: [id])
}

// Define the data model for the "user_nutritions" table
model UserNutrition {
  id           Int  @id @default(autoincrement())
  user_id      Int
  calories     Int
  protein      Int
  carbohydrate Int
  vitamin      Int
  fiber        Int
  fat          Int
  user         User @relation(fields: [user_id], references: [id])
}
